classdef distanceSM < SM
    % This is the abstract interface class for similarity measures working
    % on any type of distances to the target surface
    properties
        Fields = {'Vertices' 
    end
    methods %Constructor
        function obj = distanceSM(varargin)
            obj = obj@SM(varargin{:});
            if nargin > 0
             Input = find(strcmp(varargin, 'Distances'));if ~isempty(Input), obj.Distances = varargin{Input+1}; end
            end
            obj.Type = 'distanceSM';
        end
    end        
end % classdef

%    % This is the abstract interface class for similarity measures working
%     % on any type of distances to the target surface
%     properties
%         Distances = 0;% required distances to target surface
%     end
%     methods %Constructor
%         function obj = distanceSM(varargin)
%             obj = obj@SM(varargin{:});
%             if nargin > 0
%              Input = find(strcmp(varargin, 'Distances'));if ~isempty(Input), obj.Distances = varargin{Input+1}; end
%             end
%             obj.Type = 'distanceSM';
%         end
%     end        
%     methods % InterFace functions
%         function struc = obj2struc(obj)
%             % converting relevant information
%             struc = obj2struc@SM(obj);
%             struc.Distances = obj.Distances;
%         end
%         function obj = struc2obj(obj,struc)
%             obj = struc2obj@SM(obj,struc);
%             obj.Distances = struc.Distances;
%         end
%         function cobj = clone(obj)
%                  cobj = clone@SM(obj);
%                  cobj.Distances = obj.Distances;
%         end
%     end