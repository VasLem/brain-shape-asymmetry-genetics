function constructAssessmentPanel(obj)
%#function arrayviewfunc workspacefunc
% Panel
obj.Handles.AssessmentPanel = uipanel(...
 'Parent',obj.Handles.Panel,...
 'FontSize',10,...
 'FontWeight','bold',...
 'ForegroundColor',[0 0 0.502],...
 'Title','Assessment List',...
 'TitlePosition','centertop',...
 'Tag','AssessmentPanel',...
 'Clipping','on',...
 'Position',[0.0127591706539075 0.00810372771474878 0.966507177033493 0.611021069692058],...
 'CreateFcn', {} );
 setappdata(obj.Handles.AssessmentPanel,'Application',obj);
% TABLE
obj.Handles.Table = uitable(...
'Parent',obj.Handles.AssessmentPanel,...
'Units','normalized',...
'ColumnFormat',{'logical' 'logical' 'char' 'char' 'char' 'numeric' 'numeric' 'numeric' 'numeric'},...
'ColumnEditable',[true false true true true false false false false],...
'ColumnName',{'Sel.'; 'Up.';'Name';'Scan';'Norm';'%Dys.';'%>Th.';'RMSE'; 'AWGN'},...
'ColumnWidth',{40 40 110 110 110 85 85 85},...
'Data',{},...
'Position',[0.0166112956810631 0.106145251396648 0.965116279069767 0.88268156424581],...
'Tag','AsssesmentTable',...
'CellEditCallback', @TableCallback,...
'CreateFcn', {} );
%'Data',{false false 'dummy' 'dummy' 'dummy' 0 0 0},...
setappdata(obj.Handles.Table,'Application',obj);
% BUTTONS
obj.Handles.NewButton = uicontrol(...
'Parent',obj.Handles.AssessmentPanel,...
'Units','normalized',...
'Callback',@NewButtonCallback,...
'FontWeight','bold',...
'ForegroundColor',[0 0 0.502],...
'Position',[0.02 0.0251177394034537 0.119667590027701 0.0613989185417757],...
'String','New',...
'Tag','NewButton',...
'CreateFcn', {} );
setappdata(obj.Handles.NewButton,'Application',obj);
%
obj.Handles.LoadButton = uicontrol(...
'Parent',obj.Handles.AssessmentPanel,...
'Units','normalized',...
'Callback',@LoadButtonCallback,...
'FontWeight','bold',...
'ForegroundColor',[0 0 0.502],...
'Position',[0.14 0.0251177394034537 0.119667590027701 0.0613989185417757],...
'String','Load',...
'Tag','LoadButton',...
'CreateFcn', {} );
setappdata(obj.Handles.LoadButton,'Application',obj);
%
obj.Handles.SaveButton = uicontrol(...
'Parent',obj.Handles.AssessmentPanel,...
'Units','normalized',...
'Callback',@SaveButtonCallback,...
'FontWeight','bold',...
'ForegroundColor',[0 0 0.502],...
'Position',[0.26 0.0251177394034537 0.119667590027701 0.0613989185417757],...
'String','Save',...
'Tag','SaveButton',...
'CreateFcn', {} );
setappdata(obj.Handles.SaveButton,'Application',obj);
%
obj.Handles.SaveAllButton = uicontrol(...
'Parent',obj.Handles.AssessmentPanel,...
'Units','normalized',...
'Callback',@SaveAllButtonCallback,...
'FontWeight','bold',...
'ForegroundColor',[0 0 0.502],...
'Position',[0.38 0.0251177394034537 0.119667590027701 0.0613989185417757],...
'String','Save All',...
'Tag','SaveAllButton',...
'CreateFcn', {} );
setappdata(obj.Handles.SaveAllButton,'Application',obj);
%
obj.Handles.RemoveButton = uicontrol(...
'Parent',obj.Handles.AssessmentPanel,...
'Units','normalized',...
'Callback',@RemoveButtonCallback,...
'FontWeight','bold',...
'ForegroundColor',[0 0 0.502],...
'Position',[0.50 0.0251177394034537 0.119667590027701 0.0613989185417757],...
'String','Remove',...
'Tag','RemoveButton',...
'CreateFcn', {} );
setappdata(obj.Handles.RemoveButton,'Application',obj);
%
obj.Handles.RemoveAllButton = uicontrol(...
'Parent',obj.Handles.AssessmentPanel,...
'Units','normalized',...
'Callback',@RemoveAllButtonCallback,...
'FontWeight','bold',...
'ForegroundColor',[0 0 0.502],...
'Position',[0.62 0.0251177394034537 0.119667590027701 0.0613989185417757],...
'String','Remove All',...
'Tag','RemoveAllButton',...
'CreateFcn', {} );
setappdata(obj.Handles.RemoveAllButton,'Application',obj);
obj.Handles.One2AllButton = uicontrol(...
'Parent',obj.Handles.AssessmentPanel,...
'Units','normalized',...
'Callback',@One2AllButtonCallback,...
'FontWeight','bold',...
'ForegroundColor',[0 0 0.502],...
'Position',[0.74 0.0251177394034537 0.119667590027701 0.0613989185417757],...
'String','One2All',...
'Tag','One2AllButton',...
'CreateFcn', {} );
setappdata(obj.Handles.One2AllButton,'Application',obj);
obj.Handles.All2AllButton = uicontrol(...
'Parent',obj.Handles.AssessmentPanel,...
'Units','normalized',...
'Callback',@All2AllButtonCallback,...
'FontWeight','bold',...
'ForegroundColor',[0 0 0.502],...
'Position',[0.86 0.0251177394034537 0.119667590027701 0.0613989185417757],...
'String','All2All',...
'Tag','All2AllButton',...
'CreateFcn', {} );
setappdata(obj.Handles.All2AllButton,'Application',obj);
end

%% CALLBACKS
function NewButtonCallback(hObject,eventdata)
         obj = getappdata(hObject,'Application');
         obj.AssessmentList{end+1} = assessment;
         updateTable(obj,obj.NrAssessments);
end
function LoadButtonCallback(hObject,eventdata)
         obj = getappdata(hObject,'Application');
         out = getMatFile('Select Assessments');
         if isempty(out), return; end
         for i=1:1:length(out);
             obj.AssessmentList{end+1} = assessment(out{i});
         end
         updateTable(obj);
end
function SaveButtonCallback(hObject,eventdata)
         obj = getappdata(hObject,'Application');
         if obj.Active == 0, return; end
         setMatFile(obj.ActiveAssessment.Tag,obj.ActiveAssessment);
end
function SaveAllButtonCallback(hObject,eventdata)
         obj = getappdata(hObject,'Application');
         if obj.NrAssessments == 0, return; end
         directoryname = uigetdir;
         if directoryname==0, return; end
         cd(directoryname);
         f = statusbar('Saving All');
         for i=1:1:obj.NrAssessments
             var = obj.AssessmentList{i};
             save([var.Tag '_' num2str(i)],'var');
             statusbar(i/obj.NrAssessments,f);
         end
         delete(f);
end
function RemoveButtonCallback(hObject,eventdata)
         obj = getappdata(hObject,'Application');
         if obj.Active == 0, return; end
         if obj.NrAssessments == 0, return; end
         delete(obj.ActiveAssessment);
         all = (1:obj.NrAssessments);
         obj.AssessmentList = obj.AssessmentList(setdiff(all,obj.Active));
         obj.Active = 0;
         updateTable(obj);
end
function RemoveAllButtonCallback(hObject,eventdata)
         obj = getappdata(hObject,'Application');
         if obj.NrAssessments == 0, return; end
         f = statusbar('Removing All');
         for i=1:1:obj.NrAssessments
             delete(obj.AssessmentList{i});
             statusbar(i/obj.NrAssessments,f);
         end
         delete(f);
         obj.Active = 0;
         obj.AssessmentList = {};
         updateTable(obj);
end
function One2AllButtonCallback(hObject,eventdata)
         obj = getappdata(hObject,'Application');
         Scan = meshObj.import;
         if isempty(Scan),return; end
         NormDirectory = uigetdir(pwd,'Norm Directory');
         if NormDirectory==0, return; end
         cd(NormDirectory);
         normfiles = dir('*.mat');
         nrnormfiles = size(normfiles,1);
         f = statusbar('Importing');drawnow;
         for i=1:1:nrnormfiles
             ass = assessment;
             ass.Tag = 'Ass';
             ass.Scan = clone(Scan);
             cd(NormDirectory)
             in = load(normfiles(i).name);
             loaded = fields(in);
             ass.Norm = in.(loaded{1});
             ass.Norm.Tag = normfiles(i).name(1:end-4);
             obj.AssessmentList{end+1} = ass;
             updateTable(obj,obj.NrAssessments);
             statusbar(i/nrnormfiles,f);drawnow;
         end
         delete(f);drawnow;
end
function All2AllButtonCallback(hObject,eventdata)
         obj = getappdata(hObject,'Application');
         Directory = uigetdir(pwd,'Norm Directory');
         if Directory==0, return; end
         cd(Directory);
         files = dir('*.mat');
         nrfiles = size(files,1);
         f = statusbar('Importing');drawnow;
         counter = 0;
         for i=1:1:nrfiles-1
             in = load(files(i).name);
             loaded = fields(in);
             Scan = in.(loaded{1});
             Scan.Tag = files(i).name(1:end-4);
             for j=(i+1):1:nrfiles
                 counter = counter +1;
                 ass = assessment;
                 ass.Tag = 'Ass';
                 ass.Scan = clone(Scan);
                 in = load(files(j).name);
                 loaded = fields(in);
                 ass.Norm = in.(loaded{1});
                 ass.Norm.Tag = files(j).name(1:end-4);
                 obj.AssessmentList{end+1} = ass;
                 updateTable(obj,obj.NrAssessments);
             end
             statusbar(i/(nrfiles-1),f);drawnow;
         end
         delete(f);drawnow;
end
%% 
function TableCallback(hObject,eventdata)
 obj = getappdata(hObject,'Application');
 if isempty(obj.AssessmentList), return; end
 row = eventdata.Indices(1);
 Column = eventdata.Indices(2);
 new = eventdata.NewData;
 switch Column
     case 1% change of active scan
         if obj.Active == row  
             obj.Active = 0;
         else
             if ~(obj.Active==0)
                 Data = get(obj.Handles.Table,'Data');
                 Data{obj.Active,1} = false;
                 set(obj.Handles.Table,'Data',Data);
             end
             %updateTable(obj); % works but is slower to this end
             obj.Active = row;
         end
     case 3
         obj.AssessmentList{row}.Tag = new;
     case 4
         if isempty(obj.AssessmentList{row}.Scan), updateTable(obj);return; end
         obj.AssessmentList{row}.Scan.Tag = new;
     case 5
         if isempty(obj.AssessmentList{row}.Norm), updateTable(obj);return; end
         obj.AssessmentList{row}.Norm.Tag = new;
 end
end

